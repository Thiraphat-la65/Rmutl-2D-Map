# Multi-stage build for production frontend
FROM node:22-alpine AS builder

WORKDIR /app

# Copy package files first for better caching
COPY package*.json ./

# Install dependencies (including devDependencies for build)
RUN npm ci --no-audit --no-fund

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Production stage with Nginx
FROM nginx:alpine AS production

# Install minimal required packages
RUN apk add --no-cache dumb-init curl && \
    rm -rf /var/cache/apk/*

# Create non-root user with specific UID/GID
RUN addgroup -g 1001 -S appgroup && \
    adduser -S -D -H -u 1001 -h /var/cache/nginx -s /sbin/nologin -G appgroup -g appgroup appuser

# Copy built files from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy configuration files
COPY nginx.conf /etc/nginx/nginx.conf
COPY default.conf /etc/nginx/conf.d/default.conf

# Copy secure entrypoint script
COPY entrypoint.sh /entrypoint.sh

# Set proper permissions for entrypoint
RUN chmod +x /entrypoint.sh && \
    chown root:root /entrypoint.sh

# Create necessary directories and set proper permissions
RUN mkdir -p /var/cache/nginx/client_temp \
             /var/cache/nginx/proxy_temp \
             /var/cache/nginx/fastcgi_temp \
             /var/cache/nginx/uwsgi_temp \
             /var/cache/nginx/scgi_temp \
             /var/log/nginx \
             /var/run \
             /tmp/nginx && \
    chown -R appuser:appgroup /var/cache/nginx \
                              /var/log/nginx \
                              /var/run \
                              /tmp/nginx \
                              /usr/share/nginx/html && \
    chmod -R 755 /var/cache/nginx \
                 /var/log/nginx \
                 /var/run \
                 /tmp/nginx \
                 /usr/share/nginx/html

# Set environment variables with secure defaults
ENV VITE_API_URL=http://localhost:3000
ENV VITE_APP_TITLE="My App"

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=15s --retries=3 \
    CMD curl -f http://localhost:80/health || exit 1

# Expose port
EXPOSE 80

# Switch to non-root user for security
USER appuser

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "/entrypoint.sh"]
CMD ["nginx", "-g", "daemon off;"]
