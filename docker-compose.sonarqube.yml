services:

  sonar-db:
    image: postgres:13
    container_name: sonar-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${SONAR_DB}
      POSTGRES_USER: ${SONAR_USER}
      POSTGRES_PASSWORD: ${SONAR_PASSWORD}
    volumes:
      - sonar_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sonar -d sonarqube"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - security-network

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonar-db:5432/${SONAR_DB}
      SONAR_JDBC_USERNAME: ${SONAR_USER}
      SONAR_JDBC_PASSWORD: ${SONAR_PASSWORD}
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"
    depends_on:
      sonar-db:
        condition: service_healthy
    networks:
      - security-network

volumes:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
  sonar_db_data:

networks:
  security-network:
    driver: bridge
